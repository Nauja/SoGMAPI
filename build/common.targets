<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!--set general build properties -->
    <Version>0.1.1</Version>
    <Product>SoGMAPI</Product>
    <LangVersion>latest</LangVersion>
    <AssemblySearchPaths>$(AssemblySearchPaths);{GAC}</AssemblySearchPaths>

    <!--uncomment for 64-bit Secrets of Grindea on Windows-->
    <!--<GamePath>D:\dev\SDV 64-bit\6125897</GamePath>
    <DefineConstants>$(DefineConstants);SOGMAPI_FOR_WINDOWS_64BIT_HACK</DefineConstants>-->

    <!--set platform-->
    <DefineConstants Condition="$(OS) == 'Windows_NT'">$(DefineConstants);SOGMAPI_FOR_WINDOWS</DefineConstants>
    <DefineConstants Condition="$(OS) == 'Windows_NT' AND !$(DefineConstants.Contains(SOGMAPI_FOR_WINDOWS_64BIT_HACK))">$(DefineConstants);SOGMAPI_FOR_XNA</DefineConstants>
  </PropertyGroup>

  <!--find game folder-->
  <Import Project="find-game-folder.targets" />

  <!-- if game path is invalid, show one user-friendly error instead of a slew of reference errors -->
  <Target Name="ValidateInstallPath" AfterTargets="BeforeBuild">
    <Error Condition="!Exists('$(GamePath)')" Text="Failed to find the game install path automatically. You can specify where to find it; see https://smapi.io/package/custom-game-path." />
  </Target>

  <!-- copy files into game directory and enable debugging -->
  <Target Name="CopySogmapiFiles" AfterTargets="AfterBuild">
    <CallTarget Targets="CopySoGMAPI;CopyDefaultMods" />
  </Target>
  <Target Name="CopySoGMAPI" Condition="'$(MSBuildProjectName)' == 'SoGMAPI'">
    <ItemGroup>
      <TranslationFiles Include="$(TargetDir)\i18n\*.json" />
    </ItemGroup>

    <Copy SourceFiles="$(TargetDir)\$(TargetName).exe" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\SoGMAPI.config.json" DestinationFiles="$(GamePath)\sogmapi-internal\config.json" />
    <Copy SourceFiles="$(TargetDir)\SoGMAPI.metadata.json" DestinationFiles="$(GamePath)\sogmapi-internal\metadata.json" />
    <Copy SourceFiles="$(TargetDir)\0Harmony.dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\Mono.Cecil.dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\Newtonsoft.Json.dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\TMXTile.dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="@(TranslationFiles)" DestinationFolder="$(GamePath)\sogmapi-internal\i18n" />
  </Target>

  <Target Name="CopyDefaultMods" Condition="'$(MSBuildProjectName)' == 'SoGMAPI.Mods.ConsoleCommands' OR '$(MSBuildProjectName)' == 'SoGMAPI.Mods.SaveBackup'">
    <ItemGroup>
      <TranslationFiles Include="$(TargetDir)\i18n\*.json" />
    </ItemGroup>

    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" Condition="Exists('$(TargetDir)\$(TargetName).pdb')" />
    <Copy SourceFiles="$(TargetDir)\manifest.json" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)" />
    <Copy SourceFiles="@(TranslationFiles)" DestinationFolder="$(GamePath)\Mods\$(AssemblyName)\i18n" />
  </Target>

  <Target Name="CopyToolkit" Condition="'$(MSBuildProjectName)' == 'SoGMAPI.Toolkit' AND $(TargetFramework) == 'net4.5'" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)\sogmapi-internal" />
  </Target>

  <Target Name="CopyToolkitCoreInterfaces" Condition="'$(MSBuildProjectName)' == 'SoGMAPI.Toolkit.CoreInterfaces' AND $(TargetFramework) == 'net4.5'" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\sogmapi-internal" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)\sogmapi-internal" />
  </Target>

  <!-- common build settings -->
  <PropertyGroup>
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <!-- launch SMAPI through Visual Studio -->
  <PropertyGroup Condition="'$(MSBuildProjectName)' == 'SoGMAPI'">
    <StartAction>Program</StartAction>
    <StartProgram>$(GamePath)\SoGModdingAPI.exe</StartProgram>
    <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
  </PropertyGroup>

  <!-- Somehow this makes Visual Studio for macOS recognise the previous section. Nobody knows why. -->
  <PropertyGroup Condition="'$(RunConfiguration)' == 'Default'" />
</Project>
