<!--

This MSBuild file sets the common configuration and build scripts used by all the projects in this
repo. It imports the other MSBuild files as needed.

-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!--set general build properties -->
    <Version>3.18.2</Version>
    <Product>SoGMAPI</Product>
    <LangVersion>latest</LangVersion>
    <AssemblySearchPaths>$(AssemblySearchPaths);{GAC}</AssemblySearchPaths>
    <DefineConstants>$(DefineConstants);SOGMAPI_DEPRECATED</DefineConstants>
    <DebugSymbols>true</DebugSymbols>

    <!--enable nullable annotations, except in .NET Standard 2.0 where they aren't supported-->
    <Nullable Condition="'$(TargetFramework)' != 'netstandard2.0'">enable</Nullable>
    <NoWarn Condition="'$(TargetFramework)' == 'netstandard2.0'">$(NoWarn);CS8632</NoWarn>

    <!--set platform-->
    <DefineConstants Condition="$(OS) == 'Windows_NT'">$(DefineConstants);SOGMAPI_FOR_WINDOWS</DefineConstants>
    <CopyToGameFolder>true</CopyToGameFolder>

    <!-- allow mods to be compiled as AnyCPU for compatibility with older platforms -->
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <!--
      suppress warnings that don't apply, so it's easier to spot actual issues.

      warning | builds     | summary                                   | rationale
      ┄┄┄┄┄┄┄ | ┄┄┄┄┄┄┄┄┄┄ | ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄ | ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
      CS0436  | all        | local type conflicts with imported type   | SoGMAPI needs to use certain low-level code during very early compatibility checks, before it's safe to load any other DLLs.
      CS0612  | deprecated | member is obsolete                        | internal references to deprecated code when deprecated code is enabled.
      CS0618  | deprecated | member is obsolete (with message)         | internal references to deprecated code when deprecated code is enabled.
      CA1416  | all        | platform code available on all platforms  | Compiler doesn't recognize the #if constants used by SoGMAPI.
      CS0809  | all        | obsolete overload for non-obsolete member | This is deliberate to signal to mods that certain APIs are only implemented for the game and shouldn't be called by mods.
      NU1701  | all        | NuGet package targets older .NET version  | All such packages are carefully tested to make sure they do work.
    -->
      <NoWarn Condition="$(DefineConstants.Contains(SOGMAPI_DEPRECATED))">$(NoWarn);CS0612;CS0618</NoWarn>
      <NoWarn>$(NoWarn);CS0436;CA1416;CS0809;NU1701</NoWarn>
  </PropertyGroup>

  <!--find game folder-->
  <Import Project="find-game-folder.targets" />
  <Target Name="ValidateInstallPath" AfterTargets="BeforeBuild">
    <!-- if game path is invalid, show one user-friendly error instead of a slew of reference errors -->
    <Error Condition="!Exists('$(GamePath)')" Text="Failed to find the game install path automatically. You can specify where to find it; see https://smapi.io/package/custom-game-path." />
  </Target>

  <!--deploy local files-->
  <Import Project="deploy-local-sogmapi.targets" Condition="'$(CopyToGameFolder)' == 'true'" />

  <!-- launch SoGMAPI through Visual Studio -->
  <PropertyGroup Condition="'$(MSBuildProjectName)' == 'SoGMAPI'">
    <StartAction>Program</StartAction>
    <StartProgram>$(GamePath)\SoGModdingAPI.exe</StartProgram>
    <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
  </PropertyGroup>

  <!-- Somehow this makes Visual Studio for macOS recognise the previous section. Nobody knows why. -->
  <PropertyGroup Condition="'$(RunConfiguration)' == 'Default'" />
</Project>
